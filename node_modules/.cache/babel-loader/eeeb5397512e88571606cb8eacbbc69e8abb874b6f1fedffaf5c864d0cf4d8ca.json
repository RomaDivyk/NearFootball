{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  state: {\n    token: null\n  },\n  mutations: {\n    // мутації це по суті сетери, які додають дані в стейт\n    // Payload (state, payload) — це дані, які передаютсья нашою мутацією з компонента, який робить мутацію\n    setToken: function setToken(state, token) {\n      console.log(token);\n      state.token = token;\n    },\n    destroyToken: function destroyToken(state) {\n      state.token = null;\n    }\n  },\n  actions: {\n    // Мутації є синхронними і ми не можемо запускати асинхронні операції, такі як виклики API, всередині мутації\n    // Что нам в таком случае делать? Создавать Действия (Actions).\n    // Действия подобны мутациям, но вместо того, чтобы напрямую изменять состояние, они совершают мутацию\n    authUser: function authUser(_ref, authData) {\n      var _this = this;\n      var commit = _ref.commit;\n      var key = \"AIzaSyAOyTrULzGd7rbuhaDsFWIMR4V6hmdWV3A\";\n      return axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\".concat(key), {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(function (res) {\n        commit(\"setToken\", res.data.idToken);\n      })[\"catch\"](function (e) {\n        console.log(\"Zalupa Horse\");\n        _this.$router.push(\"/auth\");\n        /* context.redirect(\"/auth\"); */\n      });\n    },\n    logoutUser: function logoutUser(_ref2) {\n      var commit = _ref2.commit;\n      // commit це відправка мутації !!!!!\n      commit(\"destroyToken\");\n    }\n  },\n  getters: {\n    checkAuthUser: function checkAuthUser(state) {\n      return state.token != null;\n    },\n    auth: function auth(state) {\n      return state.user;\n    }\n  }\n};","map":{"version":3,"names":["axios","state","token","mutations","setToken","console","log","destroyToken","actions","authUser","authData","commit","key","post","email","password","returnSecureToken","then","res","data","idToken","e","$router","push","logoutUser","getters","checkAuthUser","auth","user"],"sources":["/Users/viktor/Desktop/okoloukola/src/store/okoloStore.js"],"sourcesContent":["import axios from \"axios\";\n\nexport default {\n  state: {\n    token: null,\n  },\n  mutations: {\n    // мутації це по суті сетери, які додають дані в стейт\n    // Payload (state, payload) — це дані, які передаютсья нашою мутацією з компонента, який робить мутацію\n    setToken(state, token) {\n      console.log(token);\n      state.token = token;\n    },\n    destroyToken(state) {\n      state.token = null;\n    },\n  },\n  actions: {\n    // Мутації є синхронними і ми не можемо запускати асинхронні операції, такі як виклики API, всередині мутації\n\n    // Что нам в таком случае делать? Создавать Действия (Actions).\n\n    // Действия подобны мутациям, но вместо того, чтобы напрямую изменять состояние, они совершают мутацию\n    authUser({ commit }, authData) {\n      const key = \"AIzaSyAOyTrULzGd7rbuhaDsFWIMR4V6hmdWV3A\";\n      return axios\n        .post(\n          `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${key}`,\n          {\n            email: authData.email,\n            password: authData.password,\n            returnSecureToken: true,\n          }\n        )\n        .then((res) => {\n          commit(\"setToken\", res.data.idToken);\n        })\n        .catch((e) => {\n          console.log(\"Zalupa Horse\");\n          this.$router.push(\"/auth\");\n          /* context.redirect(\"/auth\"); */\n        });\n    },\n    logoutUser({ commit }) {\n      // commit це відправка мутації !!!!!\n      commit(\"destroyToken\");\n    },\n  },\n\n  getters: {\n    checkAuthUser(state) {\n      return state.token != null;\n    },\n    auth(state) {\n      return state.user;\n    },\n  },\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACT;IACA;IACAC,QAAQ,oBAACH,KAAK,EAAEC,KAAK,EAAE;MACrBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAClBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDK,YAAY,wBAACN,KAAK,EAAE;MAClBA,KAAK,CAACC,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDM,OAAO,EAAE;IACP;IAEA;IAEA;IACAC,QAAQ,0BAAaC,QAAQ,EAAE;MAAA;MAAA,IAApBC,MAAM,QAANA,MAAM;MACf,IAAMC,GAAG,GAAG,yCAAyC;MACrD,OAAOZ,KAAK,CACTa,IAAI,qFAC0ED,GAAG,GAChF;QACEE,KAAK,EAAEJ,QAAQ,CAACI,KAAK;QACrBC,QAAQ,EAAEL,QAAQ,CAACK,QAAQ;QAC3BC,iBAAiB,EAAE;MACrB,CAAC,CACF,CACAC,IAAI,CAAC,UAACC,GAAG,EAAK;QACbP,MAAM,CAAC,UAAU,EAAEO,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;MACtC,CAAC,CAAC,SACI,CAAC,UAACC,CAAC,EAAK;QACZhB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B,KAAI,CAACgB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;QAC1B;MACF,CAAC,CAAC;IACN,CAAC;IACDC,UAAU,6BAAa;MAAA,IAAVb,MAAM,SAANA,MAAM;MACjB;MACAA,MAAM,CAAC,cAAc,CAAC;IACxB;EACF,CAAC;EAEDc,OAAO,EAAE;IACPC,aAAa,yBAACzB,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACC,KAAK,IAAI,IAAI;IAC5B,CAAC;IACDyB,IAAI,gBAAC1B,KAAK,EAAE;MACV,OAAOA,KAAK,CAAC2B,IAAI;IACnB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}