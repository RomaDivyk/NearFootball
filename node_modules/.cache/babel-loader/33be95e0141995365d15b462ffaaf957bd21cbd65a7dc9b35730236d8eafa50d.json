{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport RSelect from \"@/components/basic/RSelect.vue\";\nimport RBasket from \"@/components/basic/RBasket.vue\";\nexport default {\n  components: {\n    RSelect: RSelect,\n    RBasket: RBasket\n  },\n  data: function data() {\n    return {\n      defaultType: {\n        twoFive: [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]],\n        threeFive: [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15]],\n        twoSix: [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12]],\n        threeSix: [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18]]\n      },\n      type: [],\n      selectType: null,\n      players: [],\n      selected: [],\n      selectedPlayers: [],\n      firstTeam: [],\n      secondTeam: [],\n      thirdTeam: [],\n      show: true\n    };\n  },\n  methods: {\n    changeType: function changeType() {\n      if (this.selectType === \"Дві по 5\") {\n        this.type = this.defaultType.twoFive;\n      }\n      if (this.selectType === \"Три по 5\") {\n        this.type = this.defaultType.threeFive;\n      }\n      if (this.selectType === \"Дві по 6\") {\n        this.type = this.defaultType.twoSix;\n      }\n      if (this.selectType === \"Три по 6\") {\n        this.type = this.defaultType.threeSix;\n      }\n      this.selected = this.type;\n    },\n    randomS: function randomS() {\n      var teamCount = this.type[0].length;\n      var basketCount = this.type.length;\n      var result = [];\n      for (var i = 0; i < teamCount; i++) {\n        result.push([]);\n      }\n      this.type.forEach(function (el) {\n        var shuffledArray = el.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        console.log(shuffledArray, \"shuffle arr\");\n        var splitArr = function splitArr(arr, chunks) {\n          return arr.reduce(function (acc, n, i) {\n            return (acc[i % chunks] = acc[i % chunks] || []).push(n), acc;\n          }, []);\n        };\n        var newArr = splitArr(shuffledArray, teamCount);\n        console.log(newArr, \"new arr\");\n        result[0].push(newArr[0]);\n        result[1].push(newArr[1]);\n        if (teamCount == 3) {\n          result[2].push(newArr[2]);\n        }\n      });\n      console.log(result, \"result\");\n      this.firstTeam = result[0];\n      this.secondTeam = result[1];\n      this.thirdTeam = result[2];\n      console.log(this.firstTeam);\n      console.log(this.secondTeam);\n      console.log(this.thirdTeam);\n    },\n    getRandomInt: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    selBasket: function selBasket(player, basketIndex, playerIndex) {\n      console.log(player, basketIndex, playerIndex);\n      this.selected[basketIndex][playerIndex] = player;\n      console.log(this.selected);\n    }\n  },\n  mounted: function mounted() {\n    this.$store.dispatch(\"loadPlayers\");\n  },\n  computed: {\n    playersLoaded: function playersLoaded() {\n      return this.$store.getters.getPlayersAdded;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAuDA;AACA;AAEA;EACAA;IAAAC;IAAAC;EAAA;EAEAC;IACA;MACAC;QACAC,UACA,QACA,QACA,QACA,QACA,QACA;QACAC,YACA,WACA,WACA,WACA,cACA,aACA;QACAC,SACA,QACA,QACA,QACA,QACA,SACA,SACA;QAEAC,WACA,WACA,WACA,WACA,cACA,cACA;MAEA;MACAC;MACAC;MACAC;MACAC;MAEAC;MAEAC;MACAC;MACAC;MAEAC;IACA;EACA;EAEAC;IACAC;MACA;QACA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MAEA;IACA;IAEAC;MACA;MACA;MACA;MAEA;QACAC;MACA;MAEA;QACA;UAAA;QAAA;QACAC;QAEA;UAAA,OACAC,WACA;YAAA,OACA;UAAA,CACA,EACA,GACA;QAAA;QAEA;QACAD;QAEAD;QACAA;QACA;UACAA;QACA;MACA;MAEAC;MACA;MACA;MACA;MACAA;MACAA;MACAA;IACA;IAEAE;MACA;IACA;IAEAC;MACAH;MACA;MACAA;IACA;EACA;EACAI;IACA;EACA;EAEAC;IACAC;MACA;IACA;EACA;AACA","names":["components","RSelect","RBasket","data","defaultType","twoFive","threeFive","twoSix","threeSix","type","selectType","players","selected","selectedPlayers","firstTeam","secondTeam","thirdTeam","show","methods","changeType","randomS","result","console","arr","getRandomInt","selBasket","mounted","computed","playersLoaded"],"sourceRoot":"src/components","sources":["Randomize.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper-content wrapper-content--fixed\">\n    <section>\n      <div class=\"container\">\n        <div class=\"random-form\">\n          <h1 class=\"title\">Randomize</h1>\n          <select class=\"selectR\" v-model=\"selectType\" @change=\"changeType\">\n            <option>Дві по 5</option>\n            <option>Три по 5</option>\n            <option>Дві по 6</option>\n            <option>Три по 6</option>\n          </select>\n          <h2 class=\"headTwo\">Select players</h2>\n          <r-basket\n            v-for=\"(item, index) in type\"\n            :key=\"index\"\n            :format=\"item\"\n            :players=\"playersLoaded\"\n            :index=\"index\"\n            @change-basket=\"selBasket\"\n          >\n          </r-basket>\n\n          <button class=\"btn\" @click=\"randomS\">Go randomize</button>\n          <div class=\"first-team\">\n            <h2>Перша тіма</h2>\n            <div v-for=\"(player, index) in firstTeam\">\n              <p v-for=\"pl in player\" :key=\"pl.id\">\n                {{ pl.name }}\n              </p>\n            </div>\n          </div>\n          <div class=\"second-team\">\n            <h2>Друга тіма</h2>\n            <div v-for=\"(player, index) in secondTeam\">\n              <p v-for=\"pl in player\" :key=\"pl.id\">\n                {{ pl.name }}\n              </p>\n            </div>\n          </div>\n          <div class=\"third-team\">\n            <h2>Третя тіма</h2>\n            <div v-for=\"(player, index) in thirdTeam\">\n              <p v-for=\"pl in player\" :key=\"pl.id\">\n                {{ pl.name }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport RSelect from \"@/components/basic/RSelect.vue\";\nimport RBasket from \"@/components/basic/RBasket.vue\";\n\nexport default {\n  components: { RSelect, RBasket },\n\n  data() {\n    return {\n      defaultType: {\n        twoFive: [\n          [1, 2],\n          [3, 4],\n          [5, 6],\n          [7, 8],\n          [9, 10],\n        ],\n        threeFive: [\n          [1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9],\n          [10, 11, 12],\n          [13, 14, 15],\n        ],\n        twoSix: [\n          [1, 2],\n          [3, 4],\n          [5, 6],\n          [7, 8],\n          [9, 10],\n          [11, 12],\n        ],\n\n        threeSix: [\n          [1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9],\n          [10, 11, 12],\n          [13, 14, 15],\n          [16, 17, 18],\n        ],\n      },\n      type: [],\n      selectType: null,\n      players: [],\n      selected: [],\n\n      selectedPlayers: [],\n\n      firstTeam: [],\n      secondTeam: [],\n      thirdTeam: [],\n\n      show: true,\n    };\n  },\n\n  methods: {\n    changeType() {\n      if (this.selectType === \"Дві по 5\") {\n        this.type = this.defaultType.twoFive;\n      }\n      if (this.selectType === \"Три по 5\") {\n        this.type = this.defaultType.threeFive;\n      }\n      if (this.selectType === \"Дві по 6\") {\n        this.type = this.defaultType.twoSix;\n      }\n      if (this.selectType === \"Три по 6\") {\n        this.type = this.defaultType.threeSix;\n      }\n\n      this.selected = this.type;\n    },\n\n    randomS() {\n      let teamCount = this.type[0].length;\n      let basketCount = this.type.length;\n      let result = [];\n\n      for (let i = 0; i < teamCount; i++) {\n        result.push([]);\n      }\n\n      this.type.forEach((el) => {\n        let shuffledArray = el.sort((a, b) => 0.5 - Math.random());\n        console.log(shuffledArray, \"shuffle arr\");\n\n        const splitArr = (arr, chunks) =>\n          arr.reduce(\n            (acc, n, i) => (\n              (acc[i % chunks] = acc[i % chunks] || []).push(n), acc\n            ),\n            []\n          );\n\n        let newArr = splitArr(shuffledArray, teamCount);\n        console.log(newArr, \"new arr\");\n\n        result[0].push(newArr[0]);\n        result[1].push(newArr[1]);\n        if (teamCount == 3) {\n          result[2].push(newArr[2]);\n        }\n      });\n\n      console.log(result, \"result\");\n      this.firstTeam = result[0];\n      this.secondTeam = result[1];\n      this.thirdTeam = result[2];\n      console.log(this.firstTeam);\n      console.log(this.secondTeam);\n      console.log(this.thirdTeam);\n    },\n\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    selBasket(player, basketIndex, playerIndex) {\n      console.log(player, basketIndex, playerIndex);\n      this.selected[basketIndex][playerIndex] = player;\n      console.log(this.selected);\n    },\n  },\n  mounted() {\n    this.$store.dispatch(\"loadPlayers\");\n  },\n\n  computed: {\n    playersLoaded() {\n      return this.$store.getters.getPlayersAdded;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.random-form {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  button {\n    margin-top: 20px;\n  }\n}\n.basket {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n}\nh2 {\n  font-weight: 800;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}