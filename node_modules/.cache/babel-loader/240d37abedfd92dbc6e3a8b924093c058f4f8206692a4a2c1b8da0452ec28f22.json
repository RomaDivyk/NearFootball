{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  data: function data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        repeatPassword: \"\"\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      console.log({\n        name: this.user.name,\n        email: this.user.email,\n        password: this.user.password,\n        repeatPassword: this.user.repeatPassword\n      });\n      this.user.name = \"\";\n      this.user.email = \"\";\n      this.user.password = \"\";\n      this.user.repeatPassword = \"\";\n    }\n  },\n  validations: {\n    user: {\n      name: {\n        required: required,\n        minLength: minLength(4)\n      },\n      email: {\n        required: required,\n        email: email\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqDA;AACA;EACAA;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACAC;QACAN;QACAC;QACAC;QACAC;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAI;IACAR;MACAC;QACAQ;QACAC;MACA;MACAR;QACAO;QACAP;MACA;IACA;EACA;AACA","names":["data","user","name","email","password","repeatPassword","methods","submit","console","validations","required","minLength"],"sourceRoot":"src/pages","sources":["Admin.vue"],"sourcesContent":["<template>\n  <section class=\"auth\">\n    <div class=\"container\">\n      <pre class=\"examp\">{{ $v.user.name }}</pre>\n\n      <form class=\"auth__form\" @submit.prevent=\"submit\" novalidate>\n        <label>Name:</label>\n        <input\n          type=\"text\"\n          required\n          placeholder=\"name\"\n          v-model=\"$v.user.name.$model\"\n          :class=\"{ 'form-group--error': $v.user.name.$error }\"\n          @change=\"$v.user.name.$touch()\"\n        />\n        <div class=\"error\" v-if=\"!$v.user.name.required\">Field is required</div>\n        <div class=\"error\" v-if=\"!$v.user.name.minLength\">\n          Name must have at least\n          {{ $v.user.name.$params.minLength.min }} letters.\n        </div>\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          required\n          placeholder=\"email\"\n          v-model=\"$v.user.email.$model\"\n          :class=\"{ 'form-group--error': $v.user.email.$error }\"\n          @change=\"$v.user.email.$touch()\"\n        />\n        <div class=\"error\" v-if=\"!$v.user.email.required\">\n          Field is required\n        </div>\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          required\n          placeholder=\"password\"\n          v-model=\"user.password\"\n        />\n        <label>Repeat password:</label>\n        <input\n          type=\"repeatPassword\"\n          required\n          placeholder=\"password\"\n          v-model=\"user.repeatPassword\"\n        />\n        <button type=\"submit\" class=\"btn\">Submit</button>\n      </form>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        repeatPassword: \"\",\n      },\n    };\n  },\n  methods: {\n    submit() {\n      console.log({\n        name: this.user.name,\n        email: this.user.email,\n        password: this.user.password,\n        repeatPassword: this.user.repeatPassword,\n      });\n      this.user.name = \"\";\n      this.user.email = \"\";\n      this.user.password = \"\";\n      this.user.repeatPassword = \"\";\n    },\n  },\n  validations: {\n    user: {\n      name: {\n        required,\n        minLength: minLength(4),\n      },\n      email: {\n        required,\n        email,\n      },\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.examp {\n  margin-top: 100px;\n}\n.auth__form {\n  margin-top: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}